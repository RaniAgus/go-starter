version: "3"

dotenv:
  - .env

vars:
  DBSTRING: postgresql://{{.POSTGRES_USER}}:{{.POSTGRES_PASSWORD}}@{{.POSTGRES_HOST}}:{{.POSTGRES_PORT}}/{{.POSTGRES_DB}}

tasks:
  default:
    cmds:
      - ag -l . | entr -r task run

  run:
    deps:
      - generate
      - tailwindcss
    sources:
      - "**/*.go"
    cmds:
      - go run cmd/go-starter/main.go

  seed:
    deps:
      - sqlc
    cmds:
      - go run cmd/seeder/main.go

  generate:
    deps:
      - sqlc
      - templ

  sqlc:
    run: when_changed
    sources:
      - data/query/**/*.sql
      - sqlc.yaml
    cmds:
      - sqlc {{default "generate" .CLI_ARGS}}
    generates:
      - internal/sql/**/*.go

  templ:
    run: when_changed
    sources:
      - templates/*.templ
    cmds:
      - templ {{default "generate" .CLI_ARGS}}
    generates:
      - templates/**/*_templ.go

  tailwindcss:
    run: when_changed
    sources:
      - templates/*.templ
      - tailwind.config.js
      - tailwind.css
    cmds:
      - npm run build --prefix styles
    generates:
      - public/css/tailwind.min.css

  goose:
    cmds:
      - goose -dir data/migration {{default "up" .CLI_ARGS}}
    env:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "{{.DBSTRING}}"

  build:
    deps:
      - generate
    sources:
      - "**/*.go"
    generates:
      - bin/go-starter
    cmds:
      - go build -C cmd/go-starter -o {{.PWD}}/bin/go-starter

  test:
    deps:
      - generate
    cmds:
      - go test ./...

  clean:
    cmds:
      - rm -rfv internal/sql
      - find . -type f -name '*_templ.go' | xargs --no-run-if-empty rm -rfv
      - rm -rfv public/css/tailwind.min.css
      - rm -rfv bin/go-starter
